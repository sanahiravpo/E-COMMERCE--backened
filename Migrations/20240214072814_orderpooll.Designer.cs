// <auto-generated />
using E_COMMERCE_WEBSITE.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_COMMERCE_WEBSITE.Migrations
{
    [DbContext(typeof(UserDBContext))]
    [Migration("20240214072814_orderpooll")]
    partial class orderpooll
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("E_COMMERCE_WEBSITE.Models.Cart", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("userid")
                        .IsUnique();

                    b.ToTable("carts");
                });

            modelBuilder.Entity("E_COMMERCE_WEBSITE.Models.CartItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("ProdId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Totalprice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("cartid")
                        .HasColumnType("int");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("ProdId");

                    b.HasIndex("cartid");

                    b.ToTable("cartitems");
                });

            modelBuilder.Entity("E_COMMERCE_WEBSITE.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("E_COMMERCE_WEBSITE.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Productid")
                        .HasColumnType("int");

                    b.Property<int>("Userid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Productid");

                    b.HasIndex("Userid");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("E_COMMERCE_WEBSITE.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("categid")
                        .HasColumnType("int");

                    b.Property<string>("productDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("productName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("categid");

                    b.ToTable("products");
                });

            modelBuilder.Entity("E_COMMERCE_WEBSITE.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("user");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("passwordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("E_COMMERCE_WEBSITE.Models.WishList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("productid")
                        .HasColumnType("int");

                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("productid");

                    b.HasIndex("userid");

                    b.ToTable("wishlists");
                });

            modelBuilder.Entity("E_COMMERCE_WEBSITE.Models.Cart", b =>
                {
                    b.HasOne("E_COMMERCE_WEBSITE.Models.User", "user")
                        .WithOne("carts")
                        .HasForeignKey("E_COMMERCE_WEBSITE.Models.Cart", "userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("E_COMMERCE_WEBSITE.Models.CartItem", b =>
                {
                    b.HasOne("E_COMMERCE_WEBSITE.Models.Product", "products")
                        .WithMany("cartitem")
                        .HasForeignKey("ProdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_COMMERCE_WEBSITE.Models.Cart", "cartss")
                        .WithMany("cartItems")
                        .HasForeignKey("cartid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cartss");

                    b.Navigation("products");
                });

            modelBuilder.Entity("E_COMMERCE_WEBSITE.Models.Order", b =>
                {
                    b.HasOne("E_COMMERCE_WEBSITE.Models.Product", "Products")
                        .WithMany()
                        .HasForeignKey("Productid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_COMMERCE_WEBSITE.Models.User", "User")
                        .WithMany("orders")
                        .HasForeignKey("Userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Products");

                    b.Navigation("User");
                });

            modelBuilder.Entity("E_COMMERCE_WEBSITE.Models.Product", b =>
                {
                    b.HasOne("E_COMMERCE_WEBSITE.Models.Category", "categ")
                        .WithMany("product")
                        .HasForeignKey("categid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("categ");
                });

            modelBuilder.Entity("E_COMMERCE_WEBSITE.Models.WishList", b =>
                {
                    b.HasOne("E_COMMERCE_WEBSITE.Models.Product", "products")
                        .WithMany()
                        .HasForeignKey("productid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_COMMERCE_WEBSITE.Models.User", "Users")
                        .WithMany("WishLists")
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");

                    b.Navigation("products");
                });

            modelBuilder.Entity("E_COMMERCE_WEBSITE.Models.Cart", b =>
                {
                    b.Navigation("cartItems");
                });

            modelBuilder.Entity("E_COMMERCE_WEBSITE.Models.Category", b =>
                {
                    b.Navigation("product");
                });

            modelBuilder.Entity("E_COMMERCE_WEBSITE.Models.Product", b =>
                {
                    b.Navigation("cartitem");
                });

            modelBuilder.Entity("E_COMMERCE_WEBSITE.Models.User", b =>
                {
                    b.Navigation("WishLists");

                    b.Navigation("carts")
                        .IsRequired();

                    b.Navigation("orders");
                });
#pragma warning restore 612, 618
        }
    }
}
